# Stage 1: Builder
FROM python:3.11.4-slim-buster AS builder

# Diretório de trabalho
WORKDIR /app

# Variáveis de ambiente
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    gettext  # Para internacionalização

# Instalar dependências Python no builder
COPY requirements.txt .
RUN pip install --upgrade pip
RUN pip wheel --wheel-dir /wheels -r requirements.txt

# Stage 2: Final
FROM python:3.11.4-slim-buster

# Criar usuário e grupo para a aplicação
RUN groupadd -r app && useradd -m -s /bin/bash -g app app

# Diretórios da aplicação
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# Instalar dependências Python
COPY --from=builder /wheels /wheels
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copiar o projeto e o entrypoint
COPY --chown=app:app . .
COPY entrypoint.prod.sh .
RUN chmod +x entrypoint.prod.sh

# Coletar arquivos estáticos
RUN python manage.py collectstatic --noinput

# Configurar permissões (opcional, se você tiver problemas com o Nginx)
RUN chown -R app:app $APP_HOME

# Executar como usuário não-root
USER app

# Iniciar o Gunicorn
CMD ["gunicorn", "hello_django.wsgi:application", "--bind", "0.0.0.0:8000"]
